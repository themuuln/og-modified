{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"JSON.stringify": {
		"prefix": "js",
		"body": [
			"JSON.stringify($1, null, 4)"
		],
		"description": "JSON.stringify($1, null, 4)"
	},
	"useState": {
		"prefix": "us",
		"body": [
			"const [$1, set$1] = useState($2)"
		],
		"description": "useState"
	},
	"JSON.stringify with console.log": {
  "prefix": "logjs",
  "body": [
    "console.log(JSON.stringify($1, null, 4))"
  ],
  "description": "console.log(JSON.stringify($1, null, 2))"
}
}